'''
3: Давайте опишем пару сущностей player и enemy через словарь, который будет иметь ключи и значения:

    name — строка, полученная от пользователя,
    health = 100,

    damage = 50.
    Поэкспериментируйте с значениями урона и жизней по желанию.
    Теперь надо создать функцию attack(person1, person2).

    Примечание: имена аргументов можете указать свои.

    Функция в качестве аргумента будет принимать атакующего и атакуемого.
    В теле функция должна получить параметр damage атакующего и отнять это количество от health атакуемого. Функция должна сама работать со словарями и изменять их значения.
    4. Давайте усложним предыдущее задание. Измените сущности, добавив новый параметр — armor = 1.2 (величина брони персонажа)
    Теперь надо добавить новую функцию, которая будет вычислять и возвращать полученный урон по формуле damage / armor
    Следовательно, у вас должно быть 2 функции:
    1. Наносит урон. Это улучшенная версия функции из задачи 3.
    2. Вычисляет урон по отношению к броне.

    Примечание. Функция номер 2 используется внутри функции номер 1 для вычисления урона и вычитания его из здоровья персонажа.


'''
player = {
    'damage': 55,
    'health': 70,
    'armor': 1.2
}
enemy = {
    'damage': 40,
    'health': 100,
    'armor': 1.2
}
dmg=0
def damage(a):
    if a in player:
        dmg=enemy['damage'] / player['armor']
    else:
        dmg=player['damage'] / enemy['armor']
        return dmg

def attack(a):
    if a in player:
        player['health'] -= damage(a)
    else:
        enemy['health'] -= damage(a)


player['name'] = input('Введите имя 1 игрока: ')
enemy['name'] = input('Введите имя 2 игрока: ')

while player['health'] >= 0:
    if enemy['health'] <= 0:
        print('Победил {}'.format(player['name']))
        break
    else:
        attack(input('Чей удар? Введите имя: '))
        print((player['health']), (enemy['health']))
else:
    print('Победил {}'.enemy(player['name']))
